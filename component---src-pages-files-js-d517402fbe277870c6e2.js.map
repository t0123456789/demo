{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/playdemo.js","webpack:///./src/components/dldemo.js","webpack:///./src/pages/files.js"],"names":["ListLink","props","style","display","marginRight","to","children","data","margin","maxWidth","padding","marginBottom","textShadow","backgroundImage","site","siteMetadata","title","listStyle","float","paths","prefix","Playdemo","render","this","index","length","srcstr","name","src","width","height","oldrender","React","Component","Dldemo","Filelist","info","console","log","enable","allFile","edges","map","node","key","relativePath","prettySize","extension","birthTime","Filecontrol","state","show","handleToggleClick","bind","setState","showingFiles","element","onClick","query"],"mappings":"4IASMA,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,OAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,YAIhB,gBAAmB,IAAhBA,EAAe,EAAfA,SAEXC,EAAI,OAcV,OACC,yBAAKL,MAAO,CAAEM,OAAO,YAAcC,SAAU,IAAKC,QAAQ,WACxD,4BAAQR,MAAO,CAAES,aAAa,WAC5B,kBAAC,OAAD,CAAMN,GAAG,IAAIH,MAAO,CAAEU,WAAW,OAASC,gBAAgB,SAG/D,wBAAIX,MAAO,CAAEC,QAAQ,WAAcI,EAAKO,KAAKC,aAAaC,QAIrD,wBAAId,MAAO,CAAEe,UAAU,OAASC,MAAM,UACpC,kBAAClB,EAAD,CAAUK,GAAG,KAAb,QACA,kBAACL,EAAD,CAAUK,GAAG,WAAb,SACA,kBAACL,EAAD,CAAUK,GAAG,aAAb,WACA,kBAACL,EAAD,CAAUK,GAAG,WAAb,WAIHC,K,uKC5CL,IAEMa,EAAQ,CACdC,wBACAA,6BAGMC,E,wLAEJC,OAAA,WAEE,GAAGC,KAAKtB,MAAMuB,MAAM,GAAGD,KAAKtB,MAAMuB,OAAOL,EAAMM,OAAO,EACzD,OAAO,KAGJ,IAAIC,EAASP,EAAMI,KAAKtB,MAAMuB,OAC9B,OACE,6BACE,oCAAUD,KAAKtB,MAAM0B,KAArB,MACA,kDACR,4BAAQC,IAAKF,EAAQV,MAAM,QAAQd,MAAO,CAAC2B,MAAM,QAAQC,OAAO,a,EAM9DC,UAAA,WACE,OAAO,qCAAWR,KAAKtB,MAAM0B,O,GApBVK,IAAMC,WA2BdZ,O,wGCnBAa,E,gLAXbZ,OAAA,WACE,OACE,6BACE,wCAAcC,KAAKtB,MAAM0B,MAChC,kC,GANoBK,IAAMC,W,yICCrBE,E,wFAEJb,OAAA,WACE,IAAIf,EAAOgB,KAAKtB,MAAMmC,KAItB,OAHAC,QAAQC,IAAI/B,GAGRgB,KAAKtB,MAAMsC,OAKb,6BACE,0CAEP,+BACS,+BACE,4BACE,4CACA,0CACA,yCACA,2CAGJ,+BACGhC,EAAKiC,QAAQC,MAAMC,KAAI,WAAWlB,GAAX,IAAGmB,EAAH,EAAGA,KAAH,OACtB,wBAAIC,IAAKpB,GACP,4BAAKmB,EAAKE,cACV,4BAAKF,EAAKG,YACV,4BAAKH,EAAKI,WACV,4BAAKJ,EAAKK,kBAtBlB,M,GARehB,IAAMC,WAyCvBgB,E,YACJ,WAAYhD,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKiD,MAAQ,CAACC,MAAM,GACpB,EAAKC,kBAAoB,EAAKA,kBAAkBC,K,yHAAvB,KAHR,E,kCAMnBD,kBAAA,WACE7B,KAAK+B,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAOD,EAAMC,U,EAIjB7B,OAAA,WACE,IAAIiC,EAAehC,KAAK2B,MAAMC,KAC1BK,EAAU,KAKd,OAJGD,IACJC,EAAU,4BAAQC,QAASlC,KAAK6B,mBAAtB,SAIP,6BACE,4BAAQK,QAASlC,KAAK6B,mBACnBG,EAAe,OAAS,QAG3B,kBAAC,EAAD,CAAUnB,KAAMb,KAAKtB,MAAMmC,KAAMG,OAAQgB,IAE/CC,I,GA5BwBxB,IAAMC,WA2EnByB,GAxBE,sBAAe,IAAZnD,EAAW,EAAXA,KAOhB,OACE,kBAAC,IAAD,KACE,6BACL,kBAAC,IAAD,CAAUoB,KAAK,eAAeH,MAAO,IACrC,kBAAC,IAAD,CAAUG,KAAK,WAAWH,MAAO,IAEjC,kBAAC,EAAD,CAAQG,KAAK,uBACb,kBAAC,EAAD,CAAQA,KAAK,sBAEb,kBAAC,EAAD,CAAaS,KAAM7B,OAQF","file":"component---src-pages-files-js-d517402fbe277870c6e2.js","sourcesContent":["import React from \"react\"\n//import { Link } from \"gatsby\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\n//Layout components are for sections of a site that you want to share across multiple pages\n\n// Link is a component that Gatsby generates for each src/page/* page\n// \tit has a 'to' property for the link path, \n//  \tso we can style this by making a ListLink component which creates a Link (via composition)\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nexport default ({ children }) => {\n  \n\tconst data = useStaticQuery(\n\t    graphql`\n\t      query {\n\t\tsite {\n\t\t  siteMetadata {\n\t\t    title\n\t\t  }\n\t\t}\n\t      }\n\t    `\n\t  )\n\n// <h3 style={{ display: `inline` }}>DemoSite</h3>\n\n\treturn (\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\n    <header style={{ marginBottom: `1.5rem` }}>\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n\n        \n\t<h3 style={{ display: `inline` }}>{data.site.siteMetadata.title}</h3>\n\t\n\n      </Link>\n      <ul style={{ listStyle: `none`, float: `right` }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListLink to=\"/contact/\">Contact</ListLink>\n        <ListLink to=\"/files/\">Files</ListLink>\n      </ul>\n    </header>\n\n    {children}\n  </div>\n\t)\n}","import React from \"react\"\n//import { graphql } from \"gatsby\"\n\n// map name/id to file path?\n//const srcstr = \"/demo/bin/webgl/index.html\"\nconst prefix = \"/bin\"   // \"/demo/bin\"\n\nconst paths = [\nprefix + \"/webgl/index.html\",\nprefix + \"/webgl2018/index.html\"\n];\n\nclass Playdemo extends React.Component {\n\n  render() {\n// don't render this component when path index is bad\n    if(this.props.index<0||this.props.index>=paths.length-1){\n\treturn null;\t\n    }\n\n    let srcstr = paths[this.props.index];\n    return (\n      <div>\n        <h2>Play {this.props.name}! </h2>\n        <h4>use the arrow keys</h4>\n<iframe src={srcstr} title=\"dummy\" style={{width:'400px',height:'300px'}}></iframe>\n\n      </div>\n    );\n  }\n\n  oldrender() {\n    return <h4>Play, {this.props.name}</h4>;\n  }\n}\n/*\t\t\n<iframe src=\"/bin/webgl/index.html\" title=\"dummy\" style={{width:'400px',height:'300px'}}></iframe>\n*/\n\nexport default Playdemo","import React from \"react\"\n//import { graphql } from \"gatsby\"\n\n// map name/id to file path?\n//const srcstr = \"/demo/bin/win64.zip\"\n//const srcstr = \"/bin/win64.zip\"\n\nclass Dldemo extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h4>Download {this.props.name}</h4>\n\t<p> </p> \n      </div>\n    );\n  }\n\n}\t\t\n\nexport default Dldemo","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Playdemo from \"../components/playdemo\"\nimport Dldemo from \"../components/dldemo\"\n\n\n\nclass Filelist extends React.Component {\n\n  render() {\n    var data = this.props.info\n    console.log(data) \n\n// don't render this component when Filecontrol.show=false (button controls this state)\n    if(!this.props.enable){\n\treturn null;\t\n    }\n\n    return (\n      <div>\n        <h2>file list </h2>\n\n\t<table>\n          <thead>\n            <tr>\n              <th>relativePath</th>\n              <th>prettySize</th>\n              <th>extension</th>\n              <th>birthTime</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.allFile.edges.map(({ node }, index) => (\n              <tr key={index}>\n                <td>{node.relativePath}</td>\n                <td>{node.prettySize}</td>\n                <td>{node.extension}</td>\n                <td>{node.birthTime}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n}\t\t\n\nclass Filecontrol extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {show: false};\n    this.handleToggleClick = this.handleToggleClick.bind(this);\n  }\n\n  handleToggleClick() {\n    this.setState(state => ({\n      show: !state.show\n    }));\n  }\n\n  render() {\n    let showingFiles = this.state.show;\n    let element = null;\n    if(showingFiles){\n  \telement = <button onClick={this.handleToggleClick}>Hide</button>\n    }\n\n    return (\n      <div>\n        <button onClick={this.handleToggleClick}>\n          {showingFiles ? 'Hide' : 'Show'}\n        </button>\n\n        <Filelist info={this.props.info} enable={showingFiles} />\n\n\t{element}\n\n      </div>\n    );\n  }\n}\n\n/*\nHandling events with React elements is very similar to handling events on DOM elements.\n\nin HTML:\n<button onclick=\"activateLasers()\">\n  Activate Lasers\n</button>\nJSX:\n<button onClick={activateLasers}>\n  Activate Lasers\n</button>\n\n    React events are named using camelCase, rather than lowercase.\n    With JSX you pass a function as the event handler, rather than a string.\n*/\n\nexport default ({ data }) => {\n  //console out the data youâ€™re getting from the GraphQL query \n  // so you can explore the data in your browser tools > console\n  // or with gatsby build, during 'Building static HTML for pages'\n //console.log(data)  \n //<Filelist info={data} />\n\n  return (\n    <Layout>\n      <div>\n\t<Playdemo name=\"Capsule Demo\" index={0}/>\n\t<Playdemo name=\"Dog Demo\" index={1}/>\n\n\t<Dldemo name=\"win 64 zip install\"/>\n\t<Dldemo name=\"linux zip install\"/>\n\n\t<Filecontrol info={data} />\n   \n      </div>\n\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          relativePath\n          prettySize\n          extension\n          birthTime(fromNow: true)\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}
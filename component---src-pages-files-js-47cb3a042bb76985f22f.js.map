{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/playdemo.js","webpack:///./src/components/dldemo.js","webpack:///./src/pages/files.js"],"names":["ListLink","props","style","display","marginRight","to","children","data","margin","maxWidth","padding","marginBottom","textShadow","backgroundImage","site","siteMetadata","title","listStyle","float","paths","prefix","name","desc","handleLinkClick","e","target","window","location","pathname","Playdemo","setIdx","triple","n","undefined","getIdx","this","currentIdx","render","idx","index","console","log","length","namestr","descstr","enable","className","onClick","srcstr","src","width","height","oldrender","React","Component","Dldemo","href","Filelist","info","allFile","edges","map","node","key","relativePath","prettySize","extension","birthTime","Filecontrol","state","show","handleToggleClick","bind","setState","showingFiles","element","query"],"mappings":"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","file":"component---src-pages-files-js-47cb3a042bb76985f22f.js","sourcesContent":["import React from \"react\"\n//import { Link } from \"gatsby\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\n//Layout components are for sections of a site that you want to share across multiple pages\n\n// Link is a component that Gatsby generates for each src/page/* page\n// \tit has a 'to' property for the link path, \n//  \tso we can style this by making a ListLink component which creates a Link (via composition)\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nexport default ({ children }) => {\n  \n\tconst data = useStaticQuery(\n\t    graphql`\n\t      query {\n\t\tsite {\n\t\t  siteMetadata {\n\t\t    title\n\t\t  }\n\t\t}\n\t      }\n\t    `\n\t  )\n\n// <h3 style={{ display: `inline` }}>DemoSite</h3>\n\n\treturn (\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\n    <header style={{ marginBottom: `1.5rem` }}>\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n\n        \n\t<h3 style={{ display: `inline` }}>{data.site.siteMetadata.title}</h3>\n\t\n\n      </Link>\n      <ul style={{ listStyle: `none`, float: `right` }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListLink to=\"/contact/\">Contact</ListLink>\n        <ListLink to=\"/files/\">Files</ListLink>\n      </ul>\n    </header>\n\n    {children}\n  </div>\n\t)\n}","import React from \"react\"\nimport { Link } from \"gatsby\"\n//import { graphql } from \"gatsby\"\n//\t\t<Link to={'/playwgl/'} state={{ formfeed: true }} >\n//\t\t<Link to={\"/playwgl/\", {state{ formfeed: true }} >\n\n\n// map name/id to file path?\n//const srcstr = \"/demo/bin/webgl/index.html\"\nconst prefix = \"/demo\"   \n//const prefix = \"\"\n\nconst pagefiles = prefix + \"/files/\"\n\nconst paths = [\nprefix + \"/bin/webgl/index.html\",\nprefix + \"/bin/webgl2018/index.html\"\n];\n\nconst name = [\n\"Capsule Demo\",\n\"Dog Demo\"\n];\n\nconst desc = [\n\"Move that capsule using the arrow keys.\",\n\"Walk around like a dog with the arrow keys.\"\n];\n\nconst handleLinkClick = (e, target) => {\n    \n\t// NODE-SAFE CODE\n\t// Gatsby uses Node to generate our pages. \n\t// Node doesn't know what a window is. \n\t// Be sure to wrap any of your browser interactions\n\t// in some sort of node-safe if statement like this:\n\n\tif (typeof window !== 'undefined') {\n\n\t\t// First, are we on the home page?\n\t\t// If so, let's scroll to the desired block,\n\t\t// which was passed in as an onClick method on our <Link />.\n\t\t// If an event was also passed, we'll preventDefault()\n\n\t\tif (window.location.pathname === pagefiles) {\n\t\t\t//if (e) e.preventDefault()\n\t\t\tPlaydemo.setIdx(target);\n\t\t}\n\t}\n\treturn true;\n}\n\nclass Playdemo extends React.Component {\n\t\n\tstatic currentIdx;\n\t\n\tstatic triple(n) {\n\t\tif (n===undefined) {\n\t\t\tn=1;\n\t\t}\n\t\treturn n*3;\n\t}\n\t\n\tstatic getIdx() {\n\t\tif (this.currentIdx===undefined) {\n\t\t\tthis.currentIdx=-1;\n\t\t}\n\t\treturn this.currentIdx;\n\t}\n\t\n\tstatic setIdx(n) {\n\t\tthis.currentIdx=n;\n\t}\n\n\t\n\n  render() {\n// don't render this component when path index is bad\n    let idx = this.props.index;\n    console.log(idx);\n    if(idx<0||idx>=paths.length){\n\treturn null;\t\n    }\n\t  \n\t  //\t\t<Link to={\"/playwgl/\"}>{this.props}\n\t  \n\tlet namestr = name[idx];\n\tlet descstr = desc[idx];\n\tif(Playdemo.getIdx()===idx){\n\t\tthis.props.enable = true;\n\t}else{\n\t\tthis.props.enable = false;\n\t}\n\t  \n\t// when demo is not enabled, render a link: \n\t// currently handles the click & changes static state above, rather than passing state via Gatsby Link (which is how it should be done, but doesn't work in some Gatsby versions)\n\t  \n    if(!this.props.enable){\n\treturn (\n\t<div className=\"playdemo\">\n\t\t<Link onClick={e => handleLinkClick(e, idx)} to={'/playwgl/'} >\n        <h4>Click to play {namestr} in your browser.</h4>\n\t\t<p>{descstr}</p>\n\t\t</Link>\n\t</div>\t\n\t);\n    }\n\n    let srcstr = paths[idx];\n    console.log(srcstr);\n    return (\n      <div className=\"playdemo\">\n        <h2>Play {namestr}! </h2>\n        <h4>{descstr}</h4>\n\t<iframe src={srcstr} title=\"dummy\" style={{width:'400px',height:'300px'}}></iframe>\n      </div>\n    );\n  }\n\n  oldrender() {\n    return <h4>Play, {this.props.name}</h4>;\n  }\n}\n/*\t\t\n<iframe src=\"/bin/webgl/index.html\" title=\"dummy\" style={{width:'400px',height:'300px'}}></iframe>\n*/\n\nexport default Playdemo","import React from \"react\"\n//import { graphql } from \"gatsby\"\n\n// map name/id to file path?\n//const srcstr = \"/demo/bin/win64.zip\"\nconst srcstr = \"/bin/win64.zip\"\n/*\nconst dlprefix = \"/bin\"      // \"/demo/bin\"   //   \"/bin\"   // \n\nconst dlpaths = [\ndlprefix + \"/win64.zip\",\ndlprefix + \"/webgl2018/index.html\"\n];\n\n\t\t<a href={filestr}>Download now!</a>\n\n*/\n\nclass Dldemo extends React.Component {\n\n  render() {\n\t  \n\t//let filestr = dlpaths[0];\n\tlet filestr = srcstr;\n\t  \n    return (\n      <div>\n        <h4>Download {this.props.name}</h4>\n\t\t<a href={filestr}>Download now!</a>\n\t<p> </p> \n      </div>\n    );\n  }\n\n}\t\t\n\nexport default Dldemo\n\n/*\n<Link> only for internal links.\nFor links to pages on other domains or \npages on the same domain not handled by the current Gatsby site, \nuse the normal <a> element.\n\n\n*/","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Playdemo from \"../components/playdemo\"\nimport Dldemo from \"../components/dldemo\"\n\n\n\nclass Filelist extends React.Component {\n\n  render() {\n    var data = this.props.info\n    console.log(data) \n\n// don't render this component when Filecontrol.show=false (button controls this state)\n    if(!this.props.enable){\n\treturn null;\t\n    }\n\n    return (\n      <div>\n        <h2>file list </h2>\n\n\t<table>\n          <thead>\n            <tr>\n              <th>relativePath</th>\n              <th>prettySize</th>\n              <th>extension</th>\n              <th>birthTime</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.allFile.edges.map(({ node }, index) => (\n              <tr key={index}>\n                <td>{node.relativePath}</td>\n                <td>{node.prettySize}</td>\n                <td>{node.extension}</td>\n                <td>{node.birthTime}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n}\t\t\n\nclass Filecontrol extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {show: false};\n    this.handleToggleClick = this.handleToggleClick.bind(this);\n  }\n\n  handleToggleClick() {\n    this.setState(state => ({\n      show: !state.show\n    }));\n  }\n\n  render() {\n    let showingFiles = this.state.show;\n    let element = null;\n    if(showingFiles){\n  \telement = <button onClick={this.handleToggleClick}>Hide</button>\n    }\n\n    return (\n      <div>\n        <button onClick={this.handleToggleClick}>\n          {showingFiles ? 'Hide' : 'Show'}\n        </button>\n\n        <Filelist info={this.props.info} enable={showingFiles} />\n\n\t{element}\n\n      </div>\n    );\n  }\n}\n\n/*\nHandling events with React elements is very similar to handling events on DOM elements.\n\nin HTML:\n<button onclick=\"activateLasers()\">\n  Activate Lasers\n</button>\nJSX:\n<button onClick={activateLasers}>\n  Activate Lasers\n</button>\n\n    React events are named using camelCase, rather than lowercase.\n    With JSX you pass a function as the event handler, rather than a string.\n*/\n\nexport default ({ data }) => {\n  //console out the data you’re getting from the GraphQL query \n  // so you can explore the data in your browser tools > console\n  // or with gatsby build, during 'Building static HTML for pages'\n //console.log(data)  \n //<Filelist info={data} />\n\n  return (\n    <Layout>\n      <div>\n\t<Playdemo name=\"Capsule Demo\" index={0} enable={false}/>\n\t<Playdemo name=\"Dog Demo\" index={1} enable={false}/>\n\n\t<Dldemo name=\"win 64 zip install\"/>\n\t<Dldemo name=\"linux zip install\"/>\n\n\t<Filecontrol info={data} />\n   \n      </div>\n\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          relativePath\n          prettySize\n          extension\n          birthTime(fromNow: true)\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}
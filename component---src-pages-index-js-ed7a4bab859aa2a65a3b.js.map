{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/index.js"],"names":["ListLink","props","style","display","marginRight","to","children","data","margin","maxWidth","padding","marginBottom","textShadow","backgroundImage","site","siteMetadata","title","listStyle","float","console","log","src","width","height","allMarkdownRemark","totalCount","edges","map","node","key","id","fields","slug","frontmatter","date","excerpt","query"],"mappings":"4IASMA,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,OAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,YAIhB,gBAAmB,IAAhBA,EAAe,EAAfA,SAEXC,EAAI,OAcV,OACC,yBAAKL,MAAO,CAAEM,OAAO,YAAcC,SAAU,IAAKC,QAAQ,WACxD,4BAAQR,MAAO,CAAES,aAAa,WAC5B,kBAAC,OAAD,CAAMN,GAAG,IAAIH,MAAO,CAAEU,WAAW,OAASC,gBAAgB,SAG/D,wBAAIX,MAAO,CAAEC,QAAQ,WAAcI,EAAKO,KAAKC,aAAaC,QAIrD,wBAAId,MAAO,CAAEe,UAAU,OAASC,MAAM,UACpC,kBAAClB,EAAD,CAAUK,GAAG,KAAb,QACA,kBAACL,EAAD,CAAUK,GAAG,WAAb,SACA,kBAACL,EAAD,CAAUK,GAAG,aAAb,WACA,kBAACL,EAAD,CAAUK,GAAG,WAAb,WAIHC,K,oICjDL,8FAqBMN,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,OAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,YAIhB,sBAAe,IAAZC,EAAW,EAAXA,KAMlB,OAJEY,QAAQC,IAAIb,GAKZ,kBAAC,IAAD,KACE,6CACA,mIAGE,4BAAQc,IAAI,wBAAwBL,MAAM,QAAQd,MAAO,CAACoB,MAAM,QAAQC,OAAO,WAEpF,4BAAKhB,EAAKiB,kBAAkBC,WAA5B,UACQlB,EAAKiB,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,yBAAKC,IAAKD,EAAKE,IACpB,kBAAC,OAAD,CACSzB,GAAIuB,EAAKG,OAAOC,MAGlB,4BACGJ,EAAKK,YAAYjB,MAAO,IACzB,mCACKY,EAAKK,YAAYC,OAGxB,2BAAIN,EAAKO,cAQrB,kBAACnC,EAAD,CAAUK,GAAG,WAAb,WAyCO,IAAM+B,EAAK","file":"component---src-pages-index-js-ed7a4bab859aa2a65a3b.js","sourcesContent":["import React from \"react\"\n//import { Link } from \"gatsby\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\n//Layout components are for sections of a site that you want to share across multiple pages\n\n// Link is a component that Gatsby generates for each src/page/* page\n// \tit has a 'to' property for the link path, \n//  \tso we can style this by making a ListLink component which creates a Link (via composition)\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nexport default ({ children }) => {\n  \n\tconst data = useStaticQuery(\n\t    graphql`\n\t      query {\n\t\tsite {\n\t\t  siteMetadata {\n\t\t    title\n\t\t  }\n\t\t}\n\t      }\n\t    `\n\t  )\n\n// <h3 style={{ display: `inline` }}>DemoSite</h3>\n\n\treturn (\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\n    <header style={{ marginBottom: `1.5rem` }}>\n      <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n\n        \n\t<h3 style={{ display: `inline` }}>{data.site.siteMetadata.title}</h3>\n\t\n\n      </Link>\n      <ul style={{ listStyle: `none`, float: `right` }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListLink to=\"/contact/\">Contact</ListLink>\n        <ListLink to=\"/files/\">Files</ListLink>\n      </ul>\n    </header>\n\n    {children}\n  </div>\n\t)\n}","/*\n\nimport React from \"react\"\n\nexport default () => <div>Hello world!</div>\n\n\n// Gatsby uses Server-Side Rendering (SSR) to generate your site’s pages, \n// the JSX code you write is usually compiled before the browser loads the page. \n// Because of this, certain features are not available at compile time and can cause a build error.\n// (ie browser globals such as window, document or localStorage)\n\n*/\n\n\nimport React from \"react\"\nimport Layout from \"../components/layout\"\n//import { graphql } from \"gatsby\"\n//import { Link, graphql, navigate } from \"gatsby\"\nimport { Link, graphql } from \"gatsby\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nexport default ({ data }) => {\n\n  console.log(data)\n  //<div> //replace with centred column of text\n  //<div style={{ margin: `3rem auto`, maxWidth: 600 }}> //replace with layout so we can reuse on other pages\n\nreturn (\n  <Layout>\n    <p>What is this? </p>\n    <p>A test website with various place holder demos made using Unity game engine and other random things.\n    </p>\n\n      <iframe src=\"/bin/webgl/index.html\" title=\"dummy\" style={{width:'400px',height:'300px'}}></iframe>\n\n\t<h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n\t    <Link\n              to={node.fields.slug}\n            >\n\n            <h3>\n              {node.frontmatter.title}{\" \"}\n              <span>\n                — {node.frontmatter.date}\n              </span>\n            </h3>\n            <p>{node.excerpt}</p>\n\n\t    </Link>\n          </div>\n        ))}\n\n\n\n<ListLink to=\"/about/\">About</ListLink>\n\n  </Layout>\n)\n\n}\n\n/*\t\n      <iframe src=\"/bin/webgl/index.html\" title=\"dummy\" style={{width:'800px',height:'600px'}}></iframe>\n\n      <iframe src=\"/demo/bin/webgl/index.html\" title=\"dummy\" style={{width:'400px',height:'300px'}}></iframe>\n\n\nif (typeof window !== `undefined`) {\n    <div>\n      <iframe src={navigate(\"/bin/webgl/index.html\")} title=\"dummy\" style={{width:'400px',height:'300px'}}></iframe>\n    </div>\n}\n\n\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\n\n<List to=\"/bin/Webgl/index.html\"> <p>webgl</p> </Link>\n<List to=\"/bin/win64.zip\"> <p>win_x64.zip</p> </Link>\n\n \n*/\n\n// To sort posts in descending order, by date replace: \n//\tallMarkdownRemark {\n// with \n// \tallMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }). \n// Note: There are 3 underscores between frontmatter and date. \n\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark (sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\n\n"],"sourceRoot":""}